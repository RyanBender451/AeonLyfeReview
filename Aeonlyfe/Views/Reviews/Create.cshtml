@model Aeonlyfe.Models.Review

@{
    ViewBag.Title = "Create";
}

<h2 class="reviewh2">Create a Review</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    //the base code is the same from the creation but I added in class names to stylize it for my needs
    <div class="form-horizontal createformr">
        <h4 class="h4create">Review</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ReviewScore, htmlAttributes: new { @class = "control-label col-md-2 revcreate" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReviewScore, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReviewScore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReviewReview, htmlAttributes: new { @class = "control-label col-md-2 revcreate" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReviewReview, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReviewReview, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReviewTitle, htmlAttributes: new { @class = "control-label col-md-2 revcreate" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReviewTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReviewTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReviewAuthor, htmlAttributes: new { @class = "control-label col-md-2 revcreate" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReviewAuthor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReviewAuthor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReviewContent, htmlAttributes: new { @class = "control-label col-md-2 revcreate" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReviewContent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReviewContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReviewDate, htmlAttributes: new { @class = "control-label col-md-2 revcreate" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReviewDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReviewDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "Religion it's from", htmlAttributes: new { @class = "control-label col-md-2 revcreate" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>
        @* Changed the link to a button link *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = " btn btn-danger", role = "button" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
